@page "/chatroom"
@inject NavigationManager NavigationManager
@inject HubConnection hubConnection
@implements IAsyncDisposable

<h3>ChatRoom</h3>
<p>@IsConnected</p>
@if (UserList != null)
{
    @foreach (var item in UserList)
    {
        <div>@item</div>
    }
}
<p>@encodedMsg</p>
@code {
    //HubConnection hubConnection;
    public bool IsConnected => hubConnection.State == HubConnectionState.Connected;
    public string encodedMsg;

    private List<string> UserList;


    protected override async Task OnInitializedAsync()
    {
        //var aaa = NavigationManager.ToAbsoluteUri("/chathub");

        //hubConnection = new HubConnectionBuilder()
        //    .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
        //    .Build();


        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
                {
                    encodedMsg = $"{user}: {message} {hubConnection.ConnectionId}";
                    InvokeAsync(() => StateHasChanged());
                });

        hubConnection.On<List<string>>("ReceiveInitializeUserList", (list) =>
                {
                    UserList = list;
                    InvokeAsync(StateHasChanged);
                //InvokeAsync(() => StateHasChanged());
            });

        //await hubConnection.StartAsync(); // App da basladi
        var bbb = hubConnection.ConnectionId;   // Baglanamaz ise CoonnectionId=null, State=Disconnected (enum HubConnectionState)

        await hubConnection.InvokeAsync("InitializeUserList", "abcde");
        //await hubConnection.SendAsync("InitializeUserList");
        await hubConnection.SendAsync("SendMessage", "sener", "merhaba");

        var ccc = await hubConnection.InvokeAsync<string>("Deneme", "AA", "BB");
        var ddd = await hubConnection.InvokeAsync<List<string>>("IamHere", "CCC");
    }

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}
